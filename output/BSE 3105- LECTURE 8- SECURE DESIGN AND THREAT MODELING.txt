Identify the Threats cont’dThere are three types of threats that you need to identify. You need to:Identify network threats: Analyze the network topologies and look for vulnerabilities. Ensure your network is not vulnerable to incorrect device and server configuration.Identify host threats: Look for vulnerabilities through poor configuration of hosts security. Consider patch levels and updates, services, protocols, accounts, files and directories, shares, ports, and auditing and logging. Identify application/algorithm threats: Scrutinize the security profile you created in the previous stage of the threat modeling process. Focus on application threats, technology-specific threats, and code/algorithm threats. Look for things such as poor input validation, passing authentication credentials over unencrypted network connections, or using weak password or account policies.
Identify the Threats cont’dA threat is a possible harm that may occur due to  vulnerability present in the design of software applications. When vulnerability in the design of systems is exploited, threat is materialized and attack happens. So, first step is making secure software applications is to identify all possible threats to the system. For this purpose, a threat modelling technique is applied.Threat modeling is a technique that makes software systems more secure by including security measures into the design of software systems. Threat modeling is performed at the early stages of software development process with the purpose to identify all possible threats that may cause harm to the software applications.
Defining the System in order to identify the threats (Cont’d)IMPLEMENTATIONASSUMPTIONSPlatformW2K vs. W2K3 vs. ???TechnologiesSQL 2000 vs. ???ProtocolsSSL vs. IPSecStandardsKnown mitigating factors from Design TimeEXTERNAL SECURITY NOTESWhat do external entities need to be aware of in the context of security with regards to your application?Who depends on your application?Can they trust your outbound feed(s)?Who do they need to contact re: security?INTERNAL SECURITY NOTESAre both host and application based threats.Document security strategy notesPrioritiesChallengesExceptionsConstraints
Software-centric ApproachMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceQuestions to consider:How is software designed and constructed?What are the languages, components and runtimes used?What are the relevant coding practices followed?How is software built and integrated?Involves the use of software architecture diagrams such as data-flow  diagrams (DFD), use case diagrams, or component diagrams to identify  threats to the design of the system.

Threat Modeling ApproachesMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceSoftware-centricFocus is on software being built and what weaknesses and  vulnerabilities are likely to be introduced in Design, Coding or Build  Integration.Asset-centricFocus is on assets needing protection and entrusted to a system or  software (data processed by the software) and what scenarios might  compromise them or lead to non-compliance.Attacker-centricFocus is on profiling an attacker’s characteristics, skill-set, and  motivation to exploit vulnerabilities and what scenarios might  attackers use to compromise the application, system or service
IIS6 Context Diagramstyle.visibilityppt_wppt_h
DREAD – Risk Ranking MethodologyMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceWith the DREAD model, you arrive at the risk rating for a given threat byasking the following questions:Damage potential: How great is the damage if the vulnerability is exploited?Reproducibility: How easy is it to reproduce the attack?Exploitability: How easy is it to launch an attack?Affected users: As a rough percentage, how many users are affected?Discoverability: How easy is it to find the vulnerability?Risk = (Damage + Reproducibility + Exploitability + Affected Users + Discoverability) / 5
Threat Modeling Process – Identify the Threats by Using Attack Trees cont’dAn attack tree and a threat tree are the same thing. In a traditional application threat model, you start with the component that you&apos;re building, (be that the entire application, a component or function, a data flow, etc.) and enumerate the potential threats to that component.When you&apos;re building an attack tree, the development is reversed. You start with the attacker&apos;s end goal, and then enumerate the possible ways you could achieve the end goal, and only then look at the application to find locations where it may be vulnerable to the vectors you&apos;ve identified. Ideologically, attack trees are more a red-team style attacker-centric approach to the problem, which can provide useful additional insight.Provide a methodical way of describing the  security of systems, based on threatsThreats are ordered into a tree-­‐like structureThe root node of this tree represents the overall  goal of an attackerIntermediary nodes represent sub-­‐goals for the  attacker to achieve in order to achieve the overall  goalThe leaf nodes represent the diﬀerent ways or  possible attacks how to achieve this goal
Threat Modeling QuestionsMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceIt is important to identify:what is being built? (the scope of the threat model)what are the requirements?what could go wrong? (abuse and exception cases)possible bugswhat can be done to address the issues? (mitigationtechniques).
Decomposition (Cont’d)DATA FLOW / DECOMPISITIONTime to break down the applicationDuring initial design we don’t know much detail so we typically only go to the service level and partially identify ‘logical’ objectsWe record this decomposition as “Entry Points”; components where an entity interfaces within the applicationData flow diagrams (DFDs) are a useful tool for decomposing an application into its key components. They provide the basis of a good technique for illustrating the flow of data between processes. An alternative is UML activity diagrams, which are similar in purpose, although focus more on the transfer of control between processes. The guiding principle for DFDs is that an application or a system can be decomposed into subsystems, and subsystems can be decomposed into still lower-level subsystems. Ignore the inner workings of the application, but focus on the scope of the application, not functional details. Decompose the application down only two, three or four levels deep – just deep enough to understand the threats to the application. Do not fail in the threat modeling process by analyzing too deeply and losing sight of the original objective.
DREAD – Risk Ranking MethodologyAfter this STRIDE model, another model called DREAD model is applied to each identified threat. The DREAD model is a threat rating model and is used to assign threat severity and priority level of identified threats. The DREAD model stands for Damage potential, Reproducibility, Exploitability, Affected users and Discoverability. When this process of threat rating by the DREAD model is completed, possible mitigation measures are recommended and listed in the next chapterSTRIDE approach is a manual process and does not have tool support.&lt;number&gt;From Security in Computing, Fifth Edition, by Charles P. Pfleeger, et al. (ISBN: 9780134085043). Copyright 2015 by Pearson Education, Inc. All rights reserved.
What are the conditions that allow the threat to take place (THREAT TREES)Building threat trees is an effective method for determining computer system security issues. The idea behind threat trees is that an application is composed of threat targets and that each target could have vulnerabilities that when successfully attacked could compromise the system.The threat tree describes the decision-making process an attacker would go through to compromise the software component.The decomposition process has helped you to identify all the system components. You then identify potential threats to each component. Threat trees then help you decide how that threat could manifest itself.Threat Modeling Process – Identify the Threats by Using Attack Trees
1.0 View payroll data (I)    1.1 Traffic is unprotected (AND)    1.2 Attacker views traffic        1.2.1 Sniff traffic with protocol analyzer        1.2.2 Listen to router traffic            1.2.2.1 Router is unpatched (AND)            1.2.2.2 Compromise router             1.2.2.3 Guess router passwordThreat #1 (I)View payroll data1.1Traffic is unprotected1.2Attacker viewstraffic1.2.1Sniff traffic with protocol analyzer1.2.2Listen to routertraffic1.2.2.1Router is unpatched1.2.2.2Compromise router1.2.2.3Guess routerpasswordThreat Modeling Process – Identify the Threats by Using Attack TreesEXAMPLE 2
Example 1 of DREAD TableMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceRatingHigh (4-5)Medium (2-3)Low (1)DDamagepotentialThe attacker can subvert the  security system; get full trust  authorization; run as  administrator; upload content.Leaking sensitive informationLeaking trivialinformationRReproducibilityThe attack can be reproduced  every time and does not require  a timing window.The attack can be reproduced,  but only with a timing window  and a particular race situation.The attack is very difficult  to reproduce, even with  knowledge of the security  hole.EExploitabilityA novice programmer could  make the attack in a short  time.A skilled programmer could  make the attack, then repeat the  steps.The attack requires an  extremely skilled person  and in-depth knowledge  every time to exploit.AAffected usersAll users, default configuration,  key customersSome users, non-default  configurationVery small percentage of  users, obscure feature;  affects anonymous usersDDiscoverabilityPublished information explains  the attack. The vulnerability is  found in the most commonly  used feature and is very  noticeable.The vulnerability is in a seldom-  used part of the product, and  only a few users should come  across it. It would take some  thinking to see malicious use.The bug is obscure, and it  is unlikely that users will  work out damage  potential.
Step 2. Create an Architecture OverviewIdentify what the application does (Use cases and misuse cases)Create an architecture diagramIdentify the technologies used (helps to determine technology-  specific threats).Miriam Celi, CISSP ~ 2017 SFISSA Security Conference
THREAT MODELLING APPROACHES Threat modeling helps to identify all possible threats along with different mitigation techniques. Many threat modeling approaches had been developed ranging from textual descriptions to graphical notations along with some tool support. Threat modeling is a key element to integrate security into software systems. It enables us to identify critical areas of design which needs to be protected. Over the time various threat modeling approaches and methodologies have been developed and are being used in the process of designing secure web applications. This approach varies from conceptual frameworks to practical methodologies. This handout presents a brief survey of existing threat modeling methodologies and techniques.
Attack Tree ExampleRoot node represents the  goals of the attacker.Leaf nodes represent theunique attack methods.Miriam Celi, CISSP ~ 2017 SFISSA Security Conference
Threat Modeling Process – Step 2: Create An Architecture OverviewIdentify what the application doesCreate an application architecture diagramIdentify the technologiesNTFS Permissions(Authentication)File AuthorizationURL Authorization.NET Roles(Authentication)User-Defined Role(Authentication)SSL(Privacy/Integrity)Trust BoundaryAliceMaryBobIISAnonymousAuthenticationFormsAuthenticationTrust BoundaryASPNET(Process Identity)Microsoft ASP.NETMicrosoft WindowsAuthenticationMicrosoftSQL Server™IPSec(Private/Integrity)
THREAT MODELLING APPROACHES Threat modelling is a key element to integrate security into software systems. It enables us to identify critical areas of design which needs to be protected. Over the time various threat modelling approaches and methodologies have been developed and are being used in the process of designing secure web applications. This approach varies from conceptual frameworks to practical methodologies. The following slide presents a brief survey of two of the most common existing threat modelling methodologies and techniques.What are the conditions that allow the threat to take place (using THREAT TREES/STRIDE)What are the attacks?How would you classify the attack (STRIDE)What are the ENTRY / EXIT Points?What protected resources / assets are exposed?Enumerate vulnerabilities that allow the attackEvaluate RISK before mitigation…   …&#9;evaluate risk after mitigation   …how would you verify / test the mitigation?
Threat Modeling ProcessThreat modeling is an  iterative process that  should be repeated as  the application evolves  (for every release,  sprint, or iteration)Miriam Celi, CISSP ~ 2017 SFISSA Security Conference
Example 2 of DREAD, Cont.High (3)Medium (2)Low (1)Damage potentialAttacker can retrieve extremely sensitive data and corrupt or destroy dataAttacker can retrieve sensitive data but do little elseAttacker can only retrieve data that has little or no potential for harmReproduc-abilityWorks every time; does not require a timing windowTiming-dependent; works only within a time windowRarely worksExploitabiltyBart Simpson could do itAttacker must be somewhat knowledgeable and skilledAttacker must be VERY knowledgeable and skilledAffected usersMost or all usersSome usersFew if any usersDiscoverabiltyAttacker can easily discover the vulnerabilityAttacker might discover the vulnerabilityAttacker will have to dig to discover the vulnerability
Threat Tree Example&lt;number&gt;From Security in Computing, Fifth Edition, by Charles P. Pfleeger, et al. (ISBN: 9780134085043). Copyright 2015 by Pearson Education, Inc. All rights reserved.
Terminology ExampleAsset(s):$5,000,000 under the mattress in guest bedroomThreat(s):Loosing the $5,000,000ThreatAttackVulnerabilityRisk  (0-100)Loosing the $5,000,000Burglar breaks in and steals moneyPlane glass windows95Windows can be lifted out of frame85No dead bolt on doors / doors can be kicked in75No alarm system100House Burns DownNo alarm system100Entry/Exit Points:Front &amp; Side DoorsWindows (guest bedroom &amp; elsewhere in residenceNote vulnerability can be shared across various attacks surfaces(!)
Three tier Architectural overview
Rate the Threats cont’dThis way of assessing risk is too simplistic for some, so at Microsoft, the DREAD model is used to refine this calculation to add a dimension that assesses what the impact of a security threat really means.Damage potential: How much damage can the threat inflict on the system?Reproducibility: How difficult is it to reproduce the threat?Exploitability: How easy is it for hackers to succeed in exploiting a vulnerability?Affected users: How many users will be affected?Discoverability: How difficult is it to discover the threat?
Step 1. Identify AssetsIdentify the assets that need to be protected.Assets are classified according to data sensitivity and their intrinsic value  to a potential attacker.Assets can range from confidential data, such as your customer or orders  database, to web pages or web site availability.Build a list of assets that require protection, including:Confidential data, such as customer databasesWeb pagesSystem availabilityAnything else that, if compromised, would prevent correct operation of your applicationMiriam Celi, CISSP ~ 2017 SFISSA Security Conference
ExampleThreatDREADSumAuth cookie theft (eavesdropping)3232313Auth cookie theft (XSS)3222312Potential for damage is high(spoofed identities, etc.)Cookie can be stolen any time, but is only useful until expiredAnybody can run a packet sniffer; XSS attacks require moderate skillAll users could be affected, but in reality most won&apos;t click malicious linksEasy to discover: just type a &lt;script&gt; block into a fieldPrioritizedRisks
DREAD MODEL
Threat ModelingMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceAn outcome of the threat modeling activity is a threat model document  that identifies:Asset, actors, use casesRelevant threatsWeaknesses that could be exploitedCountermeasuresThreat modeling is an iterative process. The threat model is a  document that evolves and that various team members can work from.
Create An Architecture Overview contdThe purpose of the architecture overview is to document thefunction of your application, its architecture and physical deployment configuration, and the technologies that form part of your solution.There are three main parts to the application Architectural overview:Identify what the application does. Document use cases to help you and others understand how your application is supposed to be used. This also helps you determine how it can be misused. Use cases put application functionality in context.Create an architecture diagram. This describes the composition and structure of your application and its subsystems as well as its physical deployment characteristics. Depending on the complexity of the application, this may need to split into several diagrams that focus on specific areasIdentify the technologies. This helps you focus on technology-specific threats later in the process. It also helps you determine the correct and most appropriate mitigation techniques.
CHAPTER 8:Secure Design and Threat ModelingLwomwa Joseph


Threat TreesThreat trees have two kinds of nodes:OR nodes: represent alternative attacksAND nodes: represent the need that all steps  (attacks) have to be taken for achieving a higher-­‐  level goalIn the safe example:AND node “eavesdrop”: attackers have to listen in  to conversations and get safe owner to actually  say the combinationAfter the tree is built different values can be assigned to the leaf nodes and these values are used to calculate the security of the goal. These values are totally dependent on the security expert and system engineer. The assignment of values is a manual process. The other attributes such as time required completing a step, operational expense, expertise required to launch an attack etc. can also be added to attack trees.

Threat ModelingMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceTo build secure software, we need to understand the risksrelated to:weaknesses in design, coding and integrationuse cases and abuse casesThe goal of threat modeling is to identify potential risks or  attacks that can occur to the system as it will be deployed,  and to make decisions to address these risks in the design  and development of the application.A threat is an undesired event that may damage or  compromise an asset or objective. It may or may not be  malicious in nature.An asset is a resource of value and can vary by perspective:To the business, an asset might be the availability of information,  or the information itself, such as customer data.It might be intangible, such as a company&apos;s reputation.To an attacker, an asset could be the ability to misuse your  application for unauthorized access to data or privileged  operations.
Architectual overview of the Threat Profile —Threats and Countermeasures

Rate the Threats cont’dApplications and companies use different criteria for different elements of the DREAD model. The formula used to calculate the rank is not as important because the values derived are relative to one another. You just need to be consistent.DREAD provides a further refinement of the simple &#9;Risk = Damage * Chance formula.D (Damage Potential) and A (Affected users) are analogous to Damage.R (Reproducibility), E (Exploitability) and D (Discoverability) are analogous to Chance.You can use this strategy to prioritize risks. After you calculate the priority for each identified security risk, you can prioritize the risks and determine a management strategy based on the priority value.
Step 1: Identify AssetsHardware: Processors, boards, keyboards, monitors, terminals, microcomputers, workstations, tape drives, printers, disks, disk drives, cables, connections, communications controllers, and communications media Software: Source programs, object programs, purchased programs, in-house programs, utility programs, operating systems, systems programs (such as compilers), and maintenance diagnostic programs Data: Data used during execution, stored data on various media, printed data, archival data, update logs, and audit records People: Skilled staff needed to run the computing system or specific programs, as well as support personnel such as guardsDocumentation: On programs, hardware, systems, administrative procedures, and the entire systemSupplies: Paper, forms, laser cartridges, recordable media, and printer ink, as well as power, heating and cooling, and necessary buildings or shelterReputation: Company imageAvailability: Ability to do business, ability to resume business rapidly and efficiently after an incident &lt;number&gt;From Security in Computing, Fifth Edition, by Charles P. Pfleeger, et al. (ISBN: 9780134085043). Copyright 2015 by Pearson Education, Inc. All rights reserved.
Identifying an Asset in a SystemENTRY POINTSServicesIIS, SQL, MSMQ, File, WSObject or ClassesDLLs, Tables, Views, etcMethodsProcedures, functions, Routines etcASSETSBoth concrete and abstract, that could be targets of an attackA concrete example might be corporate data stored in a database.  A more abstract example might be network coherency in a peer to peer application.Assets should be nouns.
Rate the Threats cont’dWithin each DREAD category, use a score of 3 for high risk, 2 for medium risk, and 1 for low risk.Assess each threat in your threat tree and assign the risk rating for each of the DREAD categories and add up the result.For example, the SQL Injection threat identified earlier could have a score of D – 3, R – 3, E – 3 , A – 3, D – 2. This gives a total score of 14.Across the total possible range of 5 – 15, 12 – 15 may be considered high risk, 8 – 11 as medium risk, and 5 – 7 as low risk.
In this stage of the threat modeling process, you identify threats to your system assets. The best way to do this is to assemble a team consisting of members of the development and test teams to conduct an informed brainstorming session in front of a whiteboard.Identify the threats that could affect the application (keep goals of the attacker, architecture and potential vulnerabilities in mind):network threatshost threatsapplication threatsAssemble team Miriam Celi, CISSP ~ 2017 SFISSA Security ConferenceThe STRIDE threat classification methodology can be used to  identify threats.Step 4. Identify the Threats
STRIDE – Threat Classification MethodologyMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceCategoryThreat TemplateSpoofingThreat action aimed to illegally access and use another user&apos;s credentials,  such as username and password.TamperingThreat action aimed to maliciously change/modify persistent data, such as  persistent data in a database, and the alteration of data in transit between two  computers over an open network, such as the Internet.RepudiationThreat action aimed to perform illegal operations in a system that lacks the  ability to trace the prohibited operations.Information DisclosureThreat action to read a file that one was not granted access to, or to read datain transit.Denial of ServiceThreat aimed to deny access to valid users, such as by making a web server  temporarily unavailable or unusable.Elevation of PrivilegeThreat aimed to gain privileged access to resources for gaining unauthorized  access to information or to compromise a system.
Identifying an Asset in a SystemUSE SCENERIOSActorUser, Admin, Hacker, SomeoneInteractionAuthenticates, Requests, Writes, ReadsServiceIIS, SQL, WS, etc.EXTERNAL DEPENDENCIESFeedsInbound (Pull) &lt;implies trust&gt;Outbound (Push)Feedstore vs. External Vendor?ApplicationsWho consumes your serviceEnvironmentsExtranet vs. Intranet vs. Internet
Rate the Threats cont’dAt this step, you can fill in the risk data that you left blank in step 5.After you document your threats, you need a way to determine which threats are the most dangerous. To do this, you need a way to rank them.You can calculate risk using a 1-10 scale for probability (where 1 is not probable, 10 is very probable), and 1-10 for damage potential (1 – minimal damage, 10 – catastrophe). This results in a risk in the range of 1 – 100. You can divide the scale into three bands to generate a High, Medium and Low risk rating.
The way to write a threat tree is to identify goals and sub-goals of an attack, as well as what must be done so that the attack succeeds.The threat tree on the next slide shows the ways in which an attacker could view another user’s confidential payroll data(this attacker’s end goal).Although threat trees communicate data well, they can become cumbersome when building large threat models. An alternative way of representing the threat tree is using an outline, as illustrated on the slide.Threat Modeling Process – Identify the Threats by Using Attack Trees
Threat Modeling ParticipantsMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceThreat modeling is a team activityMembers of development and test teams, such as:Application architectsSecurity professionalsDevelopersTestersSystem AdministratorsWork together to identify exposures in the application design of a  system.
Break down the applicationCreate a security profile based on traditional areas of vulnerabilityExamine interactions between different subsystemsUse DFD or UML diagramsThreat Modeling Process – Step 3: Decompose the ApplicationIdentify Trust BoundariesIdentify Data FlowIdentify Entry PointsIdentify Privileged CodeDocument Security Profile
Identifying Subsystems cont’dCarefully consider all entry points to your application – such as Web pages or socket servers – as these are potential routes for attack. Also consider entry points on internal subsystems or components. Although these entry points may only exist to allow internal communication between components in your application, they could also serve as points of attack, if the attacker manages to bypass the normal “front door” security controls.Consider code that accesses secure resources such as DNS servers, directory services, environment variables, event logs, file systems, message queues, performance counters, printers, the registry, sockets, and Web services. Any code that demands special privileges or which works with the security system (for example .NET code access security) demands special vigilance. Consideration placing trust boundaries/levels at each entry point by using access code and special privileges. Create a security profile for the application by documenting the design and implementation approaches for the application its self, input validation, authentication, authorization, configuration management, and the remaining areas where applications are most susceptible to vulnerabilities.
Threat Modeling Process – Step 6: Rate/measure the ThreatsUse formula: &#9;Risk = Probability * Damage PotentialUse DREAD to rate threatsDamage potential Reproducibility Exploitability   Affected users Discoverability
Creating a Threat TreeProcedure:Identify possible attack goalsEach of these goals is the starting point for a separate Threat  Tree or a sub-­‐tree of a single Threat TreeIdentify possible attacks and sub-­‐goals to achieve a top-­‐  level goal, add concrete attacks as leaf nodes, add sub-­‐  goals to the treeRepeat 2. for each added sub-­‐goal, until only leaf nodes  (concrete attacks) are added to the treeAssign annotations to each leaf node, propagate and  aggregate annotations up the treeKeep tree updated, if values are changed (company  analyst changes values to ask “what-­‐if” questions)
Identifying an Asset in a System and its subsystemsROLES AND IDENTITIESThis allows the ability to define what roles exist in the applicationAllow identification of what authentication mechanism is usedAlso allow weighting of groups to assess impact and opportunity due to size of populationTRUST LEVELSTrust levels characterize either entry points or assets.Entry points describe the external entity that can interface with the entry point.Assets indicate what privilege level would normally be able to access the resource.The type of trust level is specific to the entry point or protected resource.One should also be able to make sure all the different roles and identities acess the assets through the identified trust levels.
1. Stride STRIDE is most widely used threat model. STRIDE covers the main six broad categories of threats. These threat categories include Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service, and Elevation of Privilege . In this model, a data flow diagram of the system under consideration is developed and STRIDE model is applied at each node of this Data Flow Diagram of the system. Then security threats are identified manually and listed.
Data-Flow Diagram ExampleMiriam Celi, CISSP ~ 2017 SFISSA Security Conference
Threat Modeling Process – Identify the Threats by Using STRIDETypes of threatsExamplesSpoofingForging e-mail messagesReplaying authentication packetsTamperingAltering data during transmissionChanging data in filesRepudiationDeleting a critical file and deny itPurchasing a product and deny itInformation disclosureExposing information in error messagesExposing code on Web sitesDenial of serviceFlooding a network with SYN packetsFlooding a network with forged ICMP(Internet Control Message Protocol)packetsElevation of privilegeExploiting buffer overruns to gain system privilegesObtaining administrator privileges illegitimately
Asset-centric ApproachMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceQuestions to consider:What are the assets entrusted to the system or software?What is the estimated value of those assets?What are the consequences to compromise or loss of the assets?How are those information assets protected?Involves the use of attack trees or attack patterns by which an asset canbe attacked.
Calculation of Risk(How does DREAD do this?)Risk = Impact * ProbabilityImpact = (DREAD)DamageNote that Damage needs to be assessed in terms of Confidentiality, Integrity and AvailabilityAffected Users (how large is the user base affected?Probability = (DREAD)Reproducibility (how difficult to reproduce? Is it scriptable?)Exploitability (how difficult to use the vulnerability to effect the attack?)Discoverability (how difficult to find?)
Threat Trees: Assigning CostsA company can also  analyse the possible costs  of attacks:OR nodes will be  annotated by the cost of  their cheapest child nodeAND nodes will be  annotated with the sum  of the costs of all child  nodesFind cheapest attack and  defend against it in  particular

Attacker-centric ApproachMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceQuestions to consider:Who is authorized and who is not?What privileges do users have?How is the software intended to be used?How can the software be abused?This approach also uses attack trees or attack patterns with focus on the  specific goals of an attacker, how attacks could be carried out, and how to  mitigate such attacks.
Threat ModelingMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceWhat it isWhat it’s notA team activityAn activity performed by a single  person.A crucial activity in developing  secure applicationsAn optional activity for developing  secure applicationAn activity that helps identify  vulnerabilities in softwareA security auditAn activity started early in the  design phaseAn activity started late in the  application life cycleAn iterative process that should  be performed for every release,  sprint, or iterationAn activity that is only performed  once or once in a while
Step 3. Decompose the ApplicationMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceIdentify trust boundaries (surrounding the assets)Identify data flow (Data flow across trust boundaries is particularly  important)Identify entry points (also serve as entry points for attacks)Identify privileged code (accesses specific types of secure resourcesand performs other privileged operations)Document the security profile (helps to uncover vulnerabilities in the  design, implementation, or deployment configuration of your application).
Rating ThreatsSimple modelDREAD modelGreater granularization of threat potentialRates (prioritizes) each threat on scale of 1-15Developed and widely used by MicrosoftRisk = Probability * Damage Potential1-10 Scale1 = Least probable10 = Most probable1-10 Scale1 = Least damage10 = Most damage
Threat Trees: Combine  AnnotationsE.g: “Find cheapest  attack that requires no  special equipment”
Step 5. Document the ThreatsMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceDocument each threat using a common threat template that defines a coreset of attributes to capture for each threat:Threat DescriptionAttacker obtains authentication credentials by  monitoring the networkThreat targetWeb application user authentication processRisk RatingTBD in Step 6Attack techniquesUse of network monitoring softwareCountermeasuresUse SSL to provide encrypted channel
Which Approach to Use?Miriam Celi, CISSP ~ 2017 SFISSA Security ConferenceSoftware centric approach is best in exposing issues in the design of asystem because the focus is on the software being built.Asset and Attacker centric approaches are important approaches to apply  in threat modeling as well, but it’s best not to combine approaches to  avoid confusion in the process.A recommendation would be to start with the software centric approach  for one release or sprint, and switch to a different approach for the next  release or sprint.Different approaches bring out different perspectives and different issuesto light.
Calculation of Risk (Cont’d)Let’s establish a few assumptionsIn the Risk equation; Damage and Probability are equally importantThe factors, as well as the result should have mathematical value (in order to assist in easily determining priorities)Therefore in any formula giving each factor equal weight an imbalance occurs giving Probability a 3:2 representation over DamageTo mitigate:e.g. Risk = Impact(D+A) * Probability(R+E+D) while ensuring the summary of qualitative scales for Risk and Probability are equal (e.g. D+A=(1-10) &amp; R+E+D=(1-10) which results in a scale of 6-100 when the summation of factors are multiplied
Identifying an Asset in a System contdIdentify the trust boundaries that surround each of the assets in your application. For each subsystem, consider whether the upstream data flows, user input or calling code is trusted, and if not, consider how the data flows and input can be authenticated and authorized. Also consider server trust relationships.Analyze the data flow between different subsystems, paying particular attention to data flows crossing trust boundaries and which roles have access to the data through the trust boundaries.
Benefits of Threat ModelingMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceFinding security bugs earlyImproved understanding of security requirementsEngineer better products and servicesAddresses security issues hidden in designDevelop secure by design solutions
1. Threat or Attack treesThreat modeling using attack trees is another methodology used to model threats to software systems. Attack trees/threat trees are conceptual diagrams showing how an asset, or target, might be attacked. Attack trees have been used in a variety of applications. In the field of information technology, they have been used to describe threats on computer system and possible attacks to realize those threats. However, their use is not restricted to the analysis of conventional information systems. They are widely used in the fields of defense and aerospace for the analysis of threats against tamper resistant electronics systems (e.g., avionics on military aircraft). Attack trees are increasingly being applied to computer control systems (especially relating to the electric power grid. Attack trees have also been used to understand threats to physical systems.
Step 6. Rate the ThreatsMiriam Celi, CISSP ~ 2017 SFISSA Security ConferenceRate the threats to prioritize and address the most significant threats  first. These threats present the biggest risk.The rating process weighs the probability of the threat against damage  that could result should an attack occur.It may turn out that certain threats do not warrant any action when youcompare the risk posed by the threat with the resulting mitigation costs.The DREAD model can be used to help calculate risk.
